{"version":3,"sources":["App.tsx","serviceWorker.ts","index.tsx"],"names":["App","apiKey","value","onEditorChange","content","editor","console","log","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oOAsBeA,MAjBf,WAMQ,OAAQ,6BAChB,6DACA,kBAAC,IAAD,CACYC,OAAO,WACPC,MARU,wtVAUVC,eATZ,SAA4BC,EAAiBC,GACzCC,QAAQC,IAAI,uBAAwBH,QCGpBI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDqI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.12e5d798.chunk.js","sourcesContent":["import React from 'react';\nimport {N1ED} from '@edsdk/n1ed-react';\nimport {Editor} from '@tinymce/tinymce-react';\nimport Test from './Test'\n\nfunction App () {\n\n   const elemEditor = \"<div class='container' style=' display: flex; justify-content: center; align-items: center; flex-direction: column; '> <div class='col-6' > <div> <strong style='color: #006395; font-size: 3em; font-family: PFBeauSansPro;'>КОПИКУПИ - технология совместного накопления </strong> <div style='border-bottom: 1.8em solid #e9732d; width: 45%;'></div> </div> <ul style='font-size: 1.5em; color: rgba(0, 0, 0, 0.65); font-weight: 600; margin-top: 20px !important; font-family: PFBeauSansPro;' className='ul_main'> <li> Вы намерены накопить на недвижимость или автомобиль самостоятельно</li> <li> Становитесь пайщиком и начинаете накапливать вместе в паевом фонде кооператива</li> <li> При выходе на первое место в очереди кооператив добавляет недостающую сумму, и вы приобретаете объект</li> </ul> </div> </div> <div class='container' className='bottom-row'> <div style=' display: flex; justify-content: center;'> <div class='col-6' className='needJS' style='min-width: 320; max-width: 645;'> <span style='padding-left: 1em; padding-right: 4em; padding-top: 4em; padding-bottom: 4em; color: #006395; font-size: 4em;'> Недвижимость </span> <ul style='font-size: 2em;  color: rgba(0, 0, 0, 0.65);'> <li> Беспроцентный заём </li> <li> Срок займа до 10 лет </li> <li> Разовый членский взнос 8,4% от суммы займа </li> </ul> </div> <div class='col-6' className='needJS' style='min-width: 320; max-width: 645;'> <span style='padding-left: 1em; padding-right: 4em; padding-top: 4em; padding-bottom: 4em; color: #006395; font-size: 4em;'> Автомобиль </span> <ul style='font-size: 2em;  color: rgba(0, 0, 0, 0.65);'> <li> Беспроцентный заём </li> <li> Срок займа до 5 лет </li> <li> Разовый членский взнос 8,4% от суммы займа </li> </ul> </div> </div> </div> </div> <div class='container' className='screen3' style='padding: 2em;'> <div style='display: flex; align-items: center; justify-content: space-evenly; flex-direction: row; height: 100%; min-width: 320; max-width: 1300;'> <div style='min-width: 320; max-width: 900'> <span> <div> <strong style='color: #006395; font-size: 4em;'> СТАТИСТИКА </strong> <div style='border-bottom: 1.8em solid #e9732d; width: 45%;'></div> </div> <div style='display: flex; justifyContent: space-between;'> <div> <span className='text-small' style='font-size: 2em;'> Совершено сделок </span> <span className='text-big sticky-text' style='color: #e9732d; font-size: 4em; font-family: Montserrat,Roboto, sans-serif;font-weight: 800; font-size: 72px; color: #e9732d; margin-top: -0.5rem;'> >310 </span> </div> <div> <span className='text-small' style='font-size: 2em;' > На сумму </span> <span className='text-big sticky-text'  style='color: #e9732d; font-size: 4em; font-family: Montserrat,Roboto, sans-serif;font-weight: 800; font-size: 72px; color: #e9732d; margin-top: -0.5rem;' > >314 млн </span> </div> </div> <div className='framed-text' style='padding: 2em; border: 2px solid #006395; padding: 2em;' > <span style='font-size: 2em;'> Сейчас в кооперативе </span> <div style='display: flex; justify-content: space-around;'> <div style='flex-grow: 1;'> <span className='text-big'  style='color: #006395; font-size: 4em; font-family: Montserrat,Roboto, sans-serif;font-weight: 800; color: #006395;' > >4300 </span> <span className='text-small sticky-text' style='font-size: 2em; margin-top: -0.5rem; color: #006395;'> пайщиков </span> </div> <div style='flex-grow: 1;'> <span className='text-big' style='color: #006395; font-size: 4em; font-family: Montserrat,Roboto, sans-serif;font-weight: 800; color: #006395;' > >600 </span> <span className='text-small' style='font-size: 2em; color: #006395;'> активных пайщиков </span> </div> </div> </div> <div style=' display: flex;flex-direction: column;'> <div> <span className='text-small' style='font-size: 2em;' > Достигли цели </span> <div> <span className='text-big sticky-text' style='color: #e9732d; font-size: 4em; font-family: Montserrat,Roboto, sans-serif;font-weight: 800; font-size: 72px; color: #e9732d; margin-top: -0.5rem;' > 50% <span style='font-size: 0.6em '> пайщиков </span> </span> </div> </div> <div> <div className='text-small' style='font-size: 2em;'> Экономия пайщиков </div> <div className='text-big sticky-text' style='color: #e9732d; font-size: 4em; font-family: Montserrat,Roboto, sans-serif;font-weight: 800; font-size: 72px; color: #e9732d; margin-top: -0.5rem;' > >100 млн </div> </div> </div> <div style='font-size: 1.6em'> Кооператив работает с августа 2015 г. </div> </span> </div> <div style='display: flex; flex-direction: row; min-width: 320; max-width: 900; height: 100%; align-items: end; align-self: end;'> <div style='width: 100%; align-items: center; display: flex; max-width: 800; min-width: 320;'> <div style='display: flex; flex-direction: column;'> <div className='diag1' style='font-size: 40px; font-size: 50px;'> <div className='diag1-wr' style='height: 100%; position: absolute; position: relative; height: unset; top: 0; width: 100%; display: flex; flex-direction: column; justify-content: space-around;'> <img src={Diag1} alt='diag1' style='display: none' /> </div> <div className='diag1-text-wr'> <div className='text-orange' style=' padding: 0 2rem 0 2rem; margin: 0; color: #e9732d; text-align: end; text-align: left; position: relative; z-index: 1;' > 166 </div> <div className='text-white' style=' padding: 0 2rem 0 2rem; margin: 0; color: #ffffff; position: relative; z-index: 1;' > 144 </div> </div> </div> <div className='legend'> <div className='legend-header' style='font-weight: 900; font-size: 2em;'> Количество сделок </div> <div className='legend-text sticky-text' style='padding: 0 0 0 2rem; position: relative; z-index: 1;  margin-top: -0.5rem;  font-size: 1.6em;'> Недвижимость </div> <div className='legend-text sticky-text ' style='padding: 0 0 0 2rem; position: relative; z-index: 1;  margin-top: -0.5rem; font-size: 1.6em;'> Автомобиль </div> </div> </div> <div class='container'> <div className='diag2' style=' position: relative; display: flex; flex-direction: column; justify-content: space-around; font-family: Montserrat, Roboto, sans-serif; font-size: 48px; font-size: 72px; z-index: inherit; ' > <div className='diag2-wr'> <img src={Diag2} alt='diag2' style='display: none' /> </div> <div className='diag2-text-wr' style=' height: 100%; position: absolute; position: relative; height: unset; top: 0; width: 100%; display: flex; flex-direction: column; justify-content: space-around; '> <div className='text-orange' style=' padding: 0 1em 0 1.5em; margin: 0 0 0 -0.5rem; color: #e9732d; text-align: start; position: relative; z-index: 2;'> 230,5 </div> <div className='text-white text-white1' style=' padding: 0 1rem 0 1rem; margin: 0; color: #ffffff; text-align: end; /* вернуть когда появятся изображения диаграмм*/ text-align: left; position: relative; z-index: 1;'> 83,6 </div> </div> </div> <div className='legend'> <div className='legend-header' style='font-weight: 900; font-size: 2em;'> Сумма сделок, млн руб. </div> <div className='legend-text sticky-text' style='padding: 0 0 0 2rem; position: relative; z-index: 1;  margin-top: -0.5rem; font-size: 1.6em;'> Недвижимость </div> <div className='legend-text sticky-text' style='padding: 0 0 0 2rem; position: relative; z-index: 1;  margin-top: -0.5rem; font-size: 1.6em;'> Автомобиль </div> </div> </div> </div> </div> </div> </div> <div className='screen4' style='width: 100%; min-height: 1080px;' > <div style='color: #006395; fontSize: 4em; text-align: center;'> Примеры сделок программ КОПИКУПИ </div> </div> </div> \"\nfunction handleEditorChange(content: string, editor: Editor) {\n    console.log('Content was updated:', content);\n};\n        return  <div>\n<span>N1ED for react test version</span>\n<N1ED\n            apiKey=\"DSN2DFLT\"\n            value={elemEditor}\n            // initialValue=\"<p>N1ED4132 react demo</p>\"\n            onEditorChange={handleEditorChange}\n        />\n        </div>\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}